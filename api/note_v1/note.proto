syntax = "proto3";

package api.note_v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/semenzal/note-service-api/pkg/note_v1";

service NoteService {
  rpc Create (CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/note/v1"
      body: "*"
    };
  }

  rpc Get (GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/note/v1/{id}"
    };
  }

  rpc List (google.protobuf.Empty) returns (GetListResponse) {
    option (google.api.http) = {
      get: "/note/v1/list"
    };
  }

  rpc Update (UpdateRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/note/v1"
      body: "*"
    };
  }

  rpc Delete (DeleteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/note/v1/{id}"
    };
  }
}

message NoteInfo {
  string title = 1;
  string text = 2;
  string author = 3;
  string email = 5 [(validate.rules).string.email = true];
}

message UpdateNoteInfo {
  google.protobuf.StringValue title = 1;
  google.protobuf.StringValue text = 2;
  google.protobuf.StringValue author = 3;
  google.protobuf.StringValue email = 5 [(validate.rules).string.email = true];
}

message Note {
  int64 id = 1;
  NoteInfo info = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message CreateRequest {
  int64 id = 1;
  NoteInfo note = 2;
}

message CreateResponse {
  int64 id = 1;
}

message GetRequest {
  int64 id = 1;
}
message GetResponse {
  Note note = 1;
}

message GetListResponse {
  repeated Note notes = 1;
}

message UpdateRequest {
  int64 id = 1;
  UpdateNoteInfo note = 2;
}

message DeleteRequest {
  int64 id = 1;
}
